# Generated by Django 5.0 on 2025-09-02 14:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('user', 'Usuário')], default='user', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracaoPadrao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cambio_usdt_padrao', models.DecimalField(decimal_places=4, default=Decimal('5.56'), help_text='Taxa de câmbio USDT padrão', max_digits=10)),
                ('frete_py_padrao', models.DecimalField(decimal_places=2, default=Decimal('7.50'), help_text='Frete Paraguay padrão por kg (USD)', max_digits=10)),
                ('taxa_adm_padrao', models.DecimalField(decimal_places=2, default=Decimal('1.90'), help_text='Taxa administrativa padrão (USD)', max_digits=10)),
                ('frete_eua_padrao', models.DecimalField(decimal_places=2, default=Decimal('1.93'), help_text='Frete EUA padrão (USD)', max_digits=10)),
                ('pol_eua_padrao', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='POL EUA padrão (USD)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuração Padrão',
                'verbose_name_plural': 'Configurações Padrão',
            },
        ),
        migrations.CreateModel(
            name='HistoricoPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=50)),
                ('capacidade_gb', models.IntegerField()),
                ('grade', models.CharField(max_length=2)),
                ('preco_eua', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preco_venda_brl', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_registro', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Preço',
                'verbose_name_plural': 'Histórico de Preços',
                'ordering': ['-data_registro'],
            },
        ),
        migrations.CreateModel(
            name='Importacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(help_text='Modelo do iPhone (ex: 11, 14 PRO MAX, 15 PRO)', max_length=50)),
                ('capacidade_gb', models.IntegerField(help_text='Capacidade em GB (128, 256, 512, etc.)', validators=[django.core.validators.MinValueValidator(64)])),
                ('grade', models.CharField(choices=[('A+', 'A+'), ('A', 'A'), ('B+', 'B+'), ('B', 'B'), ('C', 'C')], help_text='Grade do produto', max_length=2)),
                ('quantidade', models.IntegerField(help_text='Quantidade de unidades', validators=[django.core.validators.MinValueValidator(1)])),
                ('valor_eua_unitario', models.DecimalField(decimal_places=2, help_text='Valor unitário nos EUA (USD)', max_digits=10)),
                ('taxa_adm_percentual', models.DecimalField(decimal_places=3, default=Decimal('0.005'), help_text='Taxa administrativa percentual (0.005 = 0.5%)', max_digits=5)),
                ('taxa_adm_fixa', models.DecimalField(decimal_places=2, default=Decimal('1.90'), help_text='Taxa administrativa fixa (USD)', max_digits=10)),
                ('frete_eua', models.DecimalField(decimal_places=2, default=Decimal('1.93'), help_text='Frete nos EUA (USD)', max_digits=10)),
                ('pol_eua', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='POL nos EUA (USD)', max_digits=10)),
                ('cambio_usdt', models.DecimalField(decimal_places=4, default=Decimal('5.56'), help_text='Taxa de câmbio USDT', max_digits=10)),
                ('frete_py_por_kg', models.DecimalField(decimal_places=2, default=Decimal('7.50'), help_text='Frete Paraguay por kg (USD)', max_digits=10)),
                ('peso_kg', models.DecimalField(decimal_places=2, default=Decimal('0.20'), help_text='Peso do produto em kg', max_digits=5)),
                ('data_importacao', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('planejado', 'Planejado'), ('em_transito', 'Em Trânsito'), ('recebido', 'Recebido'), ('vendido', 'Vendido')], default='planejado', max_length=15)),
                ('preco_venda_unitario', models.DecimalField(blank=True, decimal_places=2, help_text='Preço de venda unitário (BRL)', max_digits=10, null=True)),
                ('data_venda', models.DateField(blank=True, help_text='Data da venda', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Importação',
                'verbose_name_plural': 'Importações',
                'ordering': ['-created_at'],
            },
        ),
    ]
